<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProductDAO">

	<select id="getProductList"
		resultType="com.javaclass.domain.ProductVO">
		SELECT p.*, min(c2.cate) AS 펫, group_concat(c3.cate) AS 최상위카테고리,
		min(c4.cate) AS 상위카테고리, group_concat(pc.cate) AS 제품카테고리 FROM
		categories c1 INNER JOIN categories c2 ON c1.pet_cate = c2.cate_no
		INNER JOIN categories c3 ON c1.small_cate = c3.cate_no INNER JOIN
		categories c4 ON c1.big_cate = c4.cate_no INNER JOIN ( SELECT
		pc.product_no, pc.cate_no, c.cate FROM product_cate pc INNER JOIN
		categories c ON pc.cate_no = c.cate_no ) pc ON c1.cate_no = pc.cate_no
		INNER JOIN products p ON pc.product_no = p.product_no
		<where>
			<if test="pName!=null"> and p.product_name LIKE '%${pName}%' </if>
			<if test="minprice!=null">
<![CDATA[ and p.product_price >= #{minprice} ]]>
			</if>
			<if test="maxprice!=null">
<![CDATA[ and p.product_price <= #{maxprice} ]]>
			</if>
		</where>
		GROUP BY p.product_no
		<trim prefix="having" prefixOverrides="AND|OR">
			<if test="cate!=null"> and 펫=#{cate} </if>
			<if test="cate2!=null"> and 상위카테고리=#{cate2} </if>
			<if test="cate3!=null"> and 제품카테고리 REGEXP '${cate3}' </if>
			<if test="cate4!=null"> and 제품카테고리 REGEXP '${cate4}' </if>
		</trim>
		ORDER BY ${orderkey} LIMIT #{start}, 9
	</select>
	<select id="getProductCnt" resultType="int">
		SELECT count(a.product_no) cnt FROM (SELECT p.*, min(c2.cate) AS 펫,
		group_concat(c3.cate) AS 최상위카테고리, min(c4.cate) AS 상위카테고리,
		group_concat(pc.cate) AS 제품카테고리 FROM categories c1 INNER JOIN
		categories c2 ON c1.pet_cate = c2.cate_no INNER JOIN categories c3 ON
		c1.small_cate = c3.cate_no INNER JOIN categories c4 ON c1.big_cate =
		c4.cate_no INNER JOIN ( SELECT pc.product_no, pc.cate_no, c.cate FROM
		product_cate pc INNER JOIN categories c ON pc.cate_no = c.cate_no ) pc
		ON c1.cate_no = pc.cate_no INNER JOIN products p ON pc.product_no =
		p.product_no
		<where>
			<if test="pName!=null"> p.product_name LIKE '%${pName}%' </if>
			<if test="minprice!=null">
<![CDATA[ and p.product_price > #{minprice} ]]>
			</if>
			<if test="maxprice!=null">
<![CDATA[ and p.product_price < #{maxprice} ]]>
			</if>
		</where>
		GROUP BY p.product_no
		<trim prefix="having" prefixOverrides="AND|OR">
			<if test="cate!=null"> and 펫=#{cate} </if>
			<if test="cate2!=null"> and 상위카테고리=#{cate2} </if>
			<if test="cate3!=null"> and 제품카테고리 REGEXP '${cate3}' </if>
			<if test="cate4!=null"> and 제품카테고리 REGEXP '${cate4}' </if>
		</trim>
		) as a
	</select>

	<select id='getRecomProductList'
		resultType="Hashmap">
		SELECT *
		FROM recom_products r
		INNER JOIN
		products p ON p.product_no = r.product_no
		order by r.recom_product_no desc
	</select>

<!--    상품상세목록   -->
<select id="getProductDetail" resultType="com.javaclass.domain.ProductVO"> SELECT * FROM products WHERE product_no=#{productNo} </select>
<select id="getProductHashMap" resultType="HashMap"> SELECT * FROM products WHERE product_no=#{productNo} </select>
<!--    상품리뷰목록   -->
<!--   <select id='getProductReview' resultType='com.javaclass.domain.ReviewVO'>
		SELECT * FROM reviews WHERE product_no=#{productNo}
	</select>   -->
<!--   상품상세 리뷰 페이징   -->
<select id="getProductReview" parameterType="HashMap" resultType="HashMap"> SELECT * FROM reviews WHERE product_no=#{productNo} order by review_no desc limit #{startRow}, #{pageSize} </select>
<select id="getPRTotalCount" parameterType="Integer" resultType="int"> select count(review_no) as review_count from reviews where product_no = #{productNo} </select>
<!--   장바구니 리스트 출력   -->
<select id="getCartList" resultType="HashMap"> SELECT *,(p.product_price*cnt) ptprice FROM products p INNER JOIN cart c ON p.product_no = c.product_no WHERE id=#{id}</select>
<!--    장바구니 상품추가    -->
<insert id="addCart"> INSERT INTO cart(id, product_no, cnt) VALUES(#{id}, #{productNo}, #{cnt}) </insert>
<!--    장바구니 상품삭제    -->
<delete id="deleteCart"> DELETE FROM cart WHERE id = #{id} AND product_no=#{productNo} </delete>
<!--    장바구니 상품체크    -->
<select id="checkCart" resultType="Integer"> SELECT count(*) FROM cart WHERE id = #{id} AND product_no=#{productNo} </select>
<!--    장바구니 상품개수 변경    -->
<update id="updateCart" parameterType="HashMap"> UPDATE cart SET cnt= #{cnt} WHERE id = #{id} AND product_no=#{productNo} </update>
<!--    결제 상품 리스트 출력   -->
<select id="selectOrderCart" resultType="HashMap"> SELECT p.product_no , p.product_img, p.product_name, p.product_price, c.cnt, m.grade_name, (g.discount_rate/100*(c.cnt*p.product_price))discount FROM cart c INNER JOIN products p ON c.product_no = p.product_no INNER JOIN members m ON m.id = c.id INNER JOIN grades g ON m.grade_name = g.grade_name WHERE m.id = #{id} </select>
<insert id="insertOrderinfo" parameterType="OrderVO" useGeneratedKeys="true" keyProperty="orderNo" keyColumn="order_no"> INSERT INTO orders(id,rdate,price,rname,raddress,rtel,request,payment,delivery_fee) VALUES(#{id},sysdate(), #{price}, #{rname}, #{raddress}, #{rtel}, #{request}, #{payment}, 2500) </insert>
<insert id="insertOrderProduct"> INSERT INTO order_detail(order_no, product_no, cnt, price) VALUES (#{orderNo}, #{no}, #{cnt}, #{price}) </insert>
<delete id="orderCartDelete"> DELETE FROM cart WHERE id = #{id}; </delete>

<update id="updateProductCnt" parameterType="Integer">
UPDATE products p
JOIN order_detail od ON p.product_no = od.product_no
SET p.product_cnt = p.product_cnt - od.cnt
WHERE od.order_no = #{orderNo};
  </update>

</mapper>